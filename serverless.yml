service: serverless-shortlinker-api

frameworkVersion: "3"

plugins:
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-central-1

  environment:
    USERS_TABLE: "TableUsers"
    LINKS_TABLE: "TableLinks"
    #DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}

    #https://udhcf9fhw2.execute-api.eu-central-1.amazonaws.com/links/d0f280
    BASE_URL: !GetAtt HttpApi.ApiEndpoint

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          # Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
          Resource:
            - { "Fn::GetAtt": ["TableUsers", "Arn"] }
            # - { "Fn::GetAtt": ["${self:provider.environment.USERS_TABLE}", "Arn"] }
            - { "Fn::GetAtt": ["TableLinks", "Arn"] }
            #- { "Fn::GetAtt": ["${self:provider.environment.LINKS_TABLE}", "Arn"] }

functions:
  signUp:
    handler: src/functions/auth.signUp
    events:
      - httpApi:
          path: /auth/sign-up
          method: post
        #  cors: true

  signIn:
    handler: src/functions/auth.signIn
    events:
      - httpApi:
          path: /auth/sign-in
          method: post
        #  cors: true

  usersList:
    handler: src/functions/auth.usersList
    events:
      - httpApi:
          path: /auth/list
          method: get

  createNewLink:
    handler: src/functions/links.createNewLink

    events:
      - httpApi:
          path: /links/create-new-link
          method: post

  redirectToOriginalLink:
    handler: src/functions/links.redirectToOriginalLink
    events:
      - httpApi:
          path: /links/{linkMarker}
          method: get

  deactivateLink:
    handler: src/functions/links.deactivateLink
    events:
      - httpApi:
          path: /links/deactivate/{linkID}
          method: patch

  deactivateLinkCron:
    handler: src/functions/links.deactivateLinkCron
    events:
      # - schedule: "cron(0 0 * * *)"
      - httpApi:
          path: /links/deactivate
          method: get

  linksList:
    handler: src/functions/links.linksList
    events:
      - httpApi:
          path: /links/list
          method: get

resources:
  Resources:
    TableUsers:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: TableUsers

        AttributeDefinitions:
          - AttributeName: userID
            AttributeType: S

        KeySchema:
          - AttributeName: userID
            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

    TableLinks:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: TableLinks

        AttributeDefinitions:
          - AttributeName: linkID
            AttributeType: S

        KeySchema:
          - AttributeName: linkID
            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
# TableName: ${self:provider.environment.DYNAMODB_TABLE}
